# this sets the user nginx will run as,
# and the number of worker processes
worker_processes 1;
user nobody nogroup;

# setup where nginx will log errors to
# and where the nginx process id resides
error_log  /var/log/nginx/error.log;

pid        /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  # Set this to on if you have more than 1 working processes
  # This will allow only one child to watch the pollset and accept
  # a connection to a socket
  accept_mutex off; # "on" if nginx worker_processes > 1
}

http {
   # brute force prevention, see: https://easyengine.io/tutorials/nginx/block-wp-login-php-bruteforce-attack/
  limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

  include       /etc/nginx/mime.types;
  default_type application/octet-stream;
  access_log /tmp/nginx.access.log combined;

  # This tells Nginx to ignore the contents of a file it is sending
  # and uses the kernel sendfile instead
  sendfile on;

  # Set this to on if you have sendfile on
  # It will prepend the HTTP response headers before
  # calling sendfile()
  tcp_nopush on;

  # This disables the "Nagle buffering algorithm" (Nginx Docs)
  # Good for websites that send a lot of small requests that
  # don't need a response
  tcp_nodelay off;

  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
  gzip_types text/plain text/xml text/css
     text/comma-separated-values
     text/javascript application/x-javascript
     application/atom+xml image/x-icon;

	# see: https://www.nginx.com/resources/admin-guide/logging-and-monitoring/
	# filter HTTP status codes 2xx (Success) and 3xx (Redirection):
	map $status $loggable {
	    ~^[23]  0;
	    default 1;
	}

  upstream unicorn_server {
   # This is the socket we configured in unicorn.rb
   server unix:/tmp/unicorn.sock
   fail_timeout=0;
  }

  server {
    listen 9292;
    client_max_body_size 4G;
    server_name _;

    keepalive_timeout 5;

    # apply filtering
    access_log /var/log/nginx/access.log combined if=$loggable;

    # Location of our static files
    # root /usr/local/share/datarator/public;

   location / {
	# brute force prevention
      limit_req   zone=one  burst=1 nodelay;
      limit_req_status 444;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;                                         

      # If you don't find the filename in the static files
      # Then request it from the unicorn server
      if (!-f $request_filename) {                        
        proxy_pass http://unicorn_server;      
        break;                    
      }                                                           
    }                                  
                         
  # error_page 500 502 503 504 /500.html;                         
    #location = /500.html {                               
    #  root /var/rails/testapp/public;         
    #}                            
  }                                                       
}                                 
